/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: server-main-message.proto */

#ifndef PROTOBUF_C_server_2dmain_2dmessage_2eproto__INCLUDED
#define PROTOBUF_C_server_2dmain_2dmessage_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "server-message.pb-c.h"
#include "client-message.pb-c.h"
#include "mesh-message.pb-c.h"

typedef struct MessageHeader MessageHeader;
typedef struct MainMessage MainMessage;
typedef struct MainMessageContainer MainMessageContainer;


/* --- enums --- */


/* --- messages --- */

struct  MessageHeader
{
  ProtobufCMessage base;
  char *accesstoken;
  /*
   * user info
   */
  char *userid;
  /*
   * device info
   */
  char *deviceid;
  char *hardwareid;
};
#define MESSAGE_HEADER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&message_header__descriptor) \
, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  MainMessage
{
  ProtobufCMessage base;
  ServerMessage *servermessage;
  ClientMessage *clientmessage;
  MeshMessage *meshmessage;
};
#define MAIN_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&main_message__descriptor) \
, NULL, NULL, NULL }


struct  MainMessageContainer
{
  ProtobufCMessage base;
  MessageHeader *messageheader;
  MainMessage *mainmessage;
};
#define MAIN_MESSAGE_CONTAINER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&main_message_container__descriptor) \
, NULL, NULL }


/* MessageHeader methods */
void   message_header__init
                     (MessageHeader         *message);
size_t message_header__get_packed_size
                     (const MessageHeader   *message);
size_t message_header__pack
                     (const MessageHeader   *message,
                      uint8_t             *out);
size_t message_header__pack_to_buffer
                     (const MessageHeader   *message,
                      ProtobufCBuffer     *buffer);
MessageHeader *
       message_header__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   message_header__free_unpacked
                     (MessageHeader *message,
                      ProtobufCAllocator *allocator);
/* MainMessage methods */
void   main_message__init
                     (MainMessage         *message);
size_t main_message__get_packed_size
                     (const MainMessage   *message);
size_t main_message__pack
                     (const MainMessage   *message,
                      uint8_t             *out);
size_t main_message__pack_to_buffer
                     (const MainMessage   *message,
                      ProtobufCBuffer     *buffer);
MainMessage *
       main_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   main_message__free_unpacked
                     (MainMessage *message,
                      ProtobufCAllocator *allocator);
/* MainMessageContainer methods */
void   main_message_container__init
                     (MainMessageContainer         *message);
size_t main_message_container__get_packed_size
                     (const MainMessageContainer   *message);
size_t main_message_container__pack
                     (const MainMessageContainer   *message,
                      uint8_t             *out);
size_t main_message_container__pack_to_buffer
                     (const MainMessageContainer   *message,
                      ProtobufCBuffer     *buffer);
MainMessageContainer *
       main_message_container__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   main_message_container__free_unpacked
                     (MainMessageContainer *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*MessageHeader_Closure)
                 (const MessageHeader *message,
                  void *closure_data);
typedef void (*MainMessage_Closure)
                 (const MainMessage *message,
                  void *closure_data);
typedef void (*MainMessageContainer_Closure)
                 (const MainMessageContainer *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor message_header__descriptor;
extern const ProtobufCMessageDescriptor main_message__descriptor;
extern const ProtobufCMessageDescriptor main_message_container__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_server_2dmain_2dmessage_2eproto__INCLUDED */
